project.plugins.apply('maven-publish')
project.plugins.apply('signing')

def localProps=new Properties()
def map = new HashMap<String,String>()
localProps.load(project.file('../local.properties').newDataInputStream())
Enumeration enumeration = localProps.keys();
while (enumeration.hasMoreElements()) {
	def key = enumeration.nextElement();
	def value = localProps.get(key);
	println("key = " + key +", value = " + value)
	map[key]=value
	println("map[key] = " + map[key])
}

afterEvaluate {
	// 1. 增加上传源码的task
	task sourceJar(type: Jar) {
		from android.sourceSets.main.java.srcDirs
		archiveClassifier = "sources"
	}
	publishing {
		publications {
			release(MavenPublication) {
				artifact sourceJar // 增加上传源码的 task
				// 依赖 bundleReleaseAar 任务，并上传其产出的aar
				afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) } // 方式一：生成aar包
				groupId = 'com.chinnsenn'
				artifactId = 'alitts'
				version = '0.0.3'

//				from components.release
				// generate pom.xml
				pom {
					name = 'TtsManager'
					description = '封装阿里云在线语音合成'
					url = 'https://github.com/chinnsenn/TtsManager'

					licenses {
						license {
							name = 'The Apache License, Version 2.0'
							url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
						}
					}
					developers {
						developer {
							id = 'chinnsenn'
							name = 'chinnsenn'
							email = 'chinnsenn@gmail.com'
						}
					}
					scm {
						url = 'https://github.com/chinnsenn/TtsManager.git'
					}
				}
			}
		}

		repositories {
			maven {
				// change to point to your repo
				def releaseRepo = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
				def snapshotRepo = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'

				url = publishing.publications.release.version.endsWith('SNAPSHOT') ? snapshotRepo : releaseRepo
				credentials {
					username = map['credencial.username']
					password = map['credencial.password']
					println("username = " + username + ", password = " + password)
				}
			}
			maven {
				name 'Build'
				url = layout.buildDirectory.dir('repo')
			}
		}
	}

	if(map['signing.keyId']&&map['signing.password']&&map['signing.secretKeyRingFile']){
		signing {
			sign publishing.publications.release
		}
	}
}